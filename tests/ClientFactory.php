<?php

declare(strict_types=1);

/*
 * BRIAPICollectionCopyLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BRIAPICollectionCopyLib\Tests;

use Core\Types\CallbackCatcher;

class ClientFactory
{
    public static function create(CallbackCatcher $httpCallback): \BRIAPICollectionCopyLib\BRIAPICollectionCopyClient
    {
        $clientBuilder = \BRIAPICollectionCopyLib\BRIAPICollectionCopyClientBuilder::init();
        $clientBuilder = self::addConfigurationFromEnvironment($clientBuilder);
        $clientBuilder = self::addTestConfiguration($clientBuilder);
        return $clientBuilder->httpCallback($httpCallback)->build();
    }

    public static function addTestConfiguration(
        \BRIAPICollectionCopyLib\BRIAPICollectionCopyClientBuilder $builder
    ): \BRIAPICollectionCopyLib\BRIAPICollectionCopyClientBuilder {
        return $builder;
    }

    public static function addConfigurationFromEnvironment(
        \BRIAPICollectionCopyLib\BRIAPICollectionCopyClientBuilder $builder
    ): \BRIAPICollectionCopyLib\BRIAPICollectionCopyClientBuilder {
        $timeout = getenv('BRIAPI_COLLECTION_COPY_LIB_TIMEOUT');
        $numberOfRetries = getenv('BRIAPI_COLLECTION_COPY_LIB_NUMBER_OF_RETRIES');
        $maximumRetryWaitTime = getenv('BRIAPI_COLLECTION_COPY_LIB_MAXIMUM_RETRY_WAIT_TIME');
        $environment = getenv('BRIAPI_COLLECTION_COPY_LIB_ENVIRONMENT');
        $oAuthClientId = getenv('BRIAPI_COLLECTION_COPY_LIB_O_AUTH_CLIENT_ID');
        $oAuthRedirectUri = getenv('BRIAPI_COLLECTION_COPY_LIB_O_AUTH_REDIRECT_URI');

        if ($timeout !== false && \is_numeric($timeout)) {
            $builder->timeout(intval($timeout));
        }

        if ($numberOfRetries !== false && \is_numeric($numberOfRetries)) {
            $builder->numberOfRetries(intval($numberOfRetries));
        }

        if ($maximumRetryWaitTime !== false && \is_numeric($maximumRetryWaitTime)) {
            $builder->maximumRetryWaitTime(intval($maximumRetryWaitTime));
        }

        if ($environment !== false) {
            $builder->environment($environment);
        }

        if ($oAuthClientId !== false) {
            $builder->oAuthClientId($oAuthClientId);
        }

        if ($oAuthRedirectUri !== false) {
            $builder->oAuthRedirectUri($oAuthRedirectUri);
        }

        return $builder;
    }
}
