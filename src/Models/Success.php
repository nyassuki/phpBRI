<?php

declare(strict_types=1);

/*
 * BRIAPICollectionCopyLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BRIAPICollectionCopyLib\Models;

use stdClass;

class Success implements \JsonSerializable
{
    /**
     * @var string
     */
    private $refreshTokenExpiresIn;

    /**
     * @var string
     */
    private $apiProductList;

    /**
     * @var string[]
     */
    private $apiProductListJson;

    /**
     * @var string
     */
    private $organizationName;

    /**
     * @var string
     */
    private $developerEmail;

    /**
     * @var string
     */
    private $tokenType;

    /**
     * @var string
     */
    private $issuedAt;

    /**
     * @var string
     */
    private $clientId;

    /**
     * @var string
     */
    private $accessToken;

    /**
     * @var string
     */
    private $applicationName;

    /**
     * @var string
     */
    private $scope;

    /**
     * @var string
     */
    private $expiresIn;

    /**
     * @var string
     */
    private $refreshCount;

    /**
     * @var string
     */
    private $status;

    /**
     * @param string $refreshTokenExpiresIn
     * @param string $apiProductList
     * @param string[] $apiProductListJson
     * @param string $organizationName
     * @param string $developerEmail
     * @param string $tokenType
     * @param string $issuedAt
     * @param string $clientId
     * @param string $accessToken
     * @param string $applicationName
     * @param string $scope
     * @param string $expiresIn
     * @param string $refreshCount
     * @param string $status
     */
    public function __construct(
        string $refreshTokenExpiresIn,
        string $apiProductList,
        array $apiProductListJson,
        string $organizationName,
        string $developerEmail,
        string $tokenType,
        string $issuedAt,
        string $clientId,
        string $accessToken,
        string $applicationName,
        string $scope,
        string $expiresIn,
        string $refreshCount,
        string $status
    ) {
        $this->refreshTokenExpiresIn = $refreshTokenExpiresIn;
        $this->apiProductList = $apiProductList;
        $this->apiProductListJson = $apiProductListJson;
        $this->organizationName = $organizationName;
        $this->developerEmail = $developerEmail;
        $this->tokenType = $tokenType;
        $this->issuedAt = $issuedAt;
        $this->clientId = $clientId;
        $this->accessToken = $accessToken;
        $this->applicationName = $applicationName;
        $this->scope = $scope;
        $this->expiresIn = $expiresIn;
        $this->refreshCount = $refreshCount;
        $this->status = $status;
    }

    /**
     * Returns Refresh Token Expires In.
     */
    public function getRefreshTokenExpiresIn(): string
    {
        return $this->refreshTokenExpiresIn;
    }

    /**
     * Sets Refresh Token Expires In.
     *
     * @required
     * @maps refresh_token_expires_in
     */
    public function setRefreshTokenExpiresIn(string $refreshTokenExpiresIn): void
    {
        $this->refreshTokenExpiresIn = $refreshTokenExpiresIn;
    }

    /**
     * Returns Api Product List.
     */
    public function getApiProductList(): string
    {
        return $this->apiProductList;
    }

    /**
     * Sets Api Product List.
     *
     * @required
     * @maps api_product_list
     */
    public function setApiProductList(string $apiProductList): void
    {
        $this->apiProductList = $apiProductList;
    }

    /**
     * Returns Api Product List Json.
     *
     * @return string[]
     */
    public function getApiProductListJson(): array
    {
        return $this->apiProductListJson;
    }

    /**
     * Sets Api Product List Json.
     *
     * @required
     * @maps api_product_list_json
     *
     * @param string[] $apiProductListJson
     */
    public function setApiProductListJson(array $apiProductListJson): void
    {
        $this->apiProductListJson = $apiProductListJson;
    }

    /**
     * Returns Organization Name.
     */
    public function getOrganizationName(): string
    {
        return $this->organizationName;
    }

    /**
     * Sets Organization Name.
     *
     * @required
     * @maps organization_name
     */
    public function setOrganizationName(string $organizationName): void
    {
        $this->organizationName = $organizationName;
    }

    /**
     * Returns Developer Email.
     */
    public function getDeveloperEmail(): string
    {
        return $this->developerEmail;
    }

    /**
     * Sets Developer Email.
     *
     * @required
     * @maps developer.email
     */
    public function setDeveloperEmail(string $developerEmail): void
    {
        $this->developerEmail = $developerEmail;
    }

    /**
     * Returns Token Type.
     */
    public function getTokenType(): string
    {
        return $this->tokenType;
    }

    /**
     * Sets Token Type.
     *
     * @required
     * @maps token_type
     */
    public function setTokenType(string $tokenType): void
    {
        $this->tokenType = $tokenType;
    }

    /**
     * Returns Issued At.
     */
    public function getIssuedAt(): string
    {
        return $this->issuedAt;
    }

    /**
     * Sets Issued At.
     *
     * @required
     * @maps issued_at
     */
    public function setIssuedAt(string $issuedAt): void
    {
        $this->issuedAt = $issuedAt;
    }

    /**
     * Returns Client Id.
     */
    public function getClientId(): string
    {
        return $this->clientId;
    }

    /**
     * Sets Client Id.
     *
     * @required
     * @maps client_id
     */
    public function setClientId(string $clientId): void
    {
        $this->clientId = $clientId;
    }

    /**
     * Returns Access Token.
     */
    public function getAccessToken(): string
    {
        return $this->accessToken;
    }

    /**
     * Sets Access Token.
     *
     * @required
     * @maps access_token
     */
    public function setAccessToken(string $accessToken): void
    {
        $this->accessToken = $accessToken;
    }

    /**
     * Returns Application Name.
     */
    public function getApplicationName(): string
    {
        return $this->applicationName;
    }

    /**
     * Sets Application Name.
     *
     * @required
     * @maps application_name
     */
    public function setApplicationName(string $applicationName): void
    {
        $this->applicationName = $applicationName;
    }

    /**
     * Returns Scope.
     */
    public function getScope(): string
    {
        return $this->scope;
    }

    /**
     * Sets Scope.
     *
     * @required
     * @maps scope
     */
    public function setScope(string $scope): void
    {
        $this->scope = $scope;
    }

    /**
     * Returns Expires In.
     */
    public function getExpiresIn(): string
    {
        return $this->expiresIn;
    }

    /**
     * Sets Expires In.
     *
     * @required
     * @maps expires_in
     */
    public function setExpiresIn(string $expiresIn): void
    {
        $this->expiresIn = $expiresIn;
    }

    /**
     * Returns Refresh Count.
     */
    public function getRefreshCount(): string
    {
        return $this->refreshCount;
    }

    /**
     * Sets Refresh Count.
     *
     * @required
     * @maps refresh_count
     */
    public function setRefreshCount(string $refreshCount): void
    {
        $this->refreshCount = $refreshCount;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @required
     * @maps status
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['refresh_token_expires_in'] = $this->refreshTokenExpiresIn;
        $json['api_product_list']         = $this->apiProductList;
        $json['api_product_list_json']    = $this->apiProductListJson;
        $json['organization_name']        = $this->organizationName;
        $json['developer.email']          = $this->developerEmail;
        $json['token_type']               = $this->tokenType;
        $json['issued_at']                = $this->issuedAt;
        $json['client_id']                = $this->clientId;
        $json['access_token']             = $this->accessToken;
        $json['application_name']         = $this->applicationName;
        $json['scope']                    = $this->scope;
        $json['expires_in']               = $this->expiresIn;
        $json['refresh_count']            = $this->refreshCount;
        $json['status']                   = $this->status;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
